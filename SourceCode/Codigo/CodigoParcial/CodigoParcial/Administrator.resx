<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEsAAAAeCAYAAABkDeOuAAAABGdBTUEAALGPC/xhBQAABGtJREFUaEPt
        WAtPFFcU9n9o1SZqfKRNfReNL0xVsD5irIoIAiLyKiAiUlhLEZACWmVrxSf4AgyiaAxSW7U+MCVq4gts
        FBsQLUVUkIWVh4XT/Y67Zu7sutmZjKBkvuRkst937+ydb+495+z2Ix0uQzdLAXSzFEA3SwF0sxRAtVkd
        7Z3U3d1NXV2W+K+Lo69DtVkrPQ3kP28j+cyJp8VToylpbbZV6btQbdb4/l5CRK5Ityp9F5qZFeWbYVXe
        D3DsX5nbrZ9cB+aomecImpkVF7SdWkxm2rO1iMKWpfJOy997hjo6Onn8oZ2n6bvgLIoPMfL12IHfmG9v
        66D0+Bzmbdq1K3dZAx7X1PMRX+gWSfO/jKDgxcl042ol5WQV83dE+aRThPePVJx33jqDqOmFiXWkCcxB
        IG1gbS8bW3gM8q1SaGZWwPzvyW+uwY5PCDXyeDyQI77V9IpmjlotaEUHf2etuuofmjsuTNAQkwb70LRh
        /gKXacjlOZW3HtKiyVGCJo0FbhFUde/R25eoBJqZ5Swqbj6kjeE7BG5T9C6+j7mljeZN+FbQThX8wVpM
        wBaBdxa/pB3lHeU51t5ceXw9PpzuV9QoruCamjV1qB9N/tTXjj9++Bz9EJUtcM7MKim6TKZmM00Z4ifw
        OOrlF2/zEZN/D44YQspNHOjNOzhuzXaa+MlyQQNvetnKa3AVmpmFt/Xo7zq6de0+TR8eIGiFuWcVmfVr
        cRnfS8p99VkQ50Qb1vmLuy4rOY+CFiUJHHabDcaUPEFzHxlItdX1VtU1aGYWFm/DMvdYQUMyl5uVErOH
        xyLBIwFLNZiFB5Fy7iNW0dO6FzwHCFmSIujIWT4e8QL3p2UX2nC9rELQ3AatoAeVNVbVNWhm1tqVb1oH
        5IGlM9YLmiOz8LBAXW2D3U4sOXaZyz0MkvK+HgmUt7uEDGFi/kMYU/O5Cks5Q9jPnMgR8pw56/M1XECU
        oMfMSozcKXAI9GbyXYg4lf8mwadt2GenvSuQr47uL7Xjl8yI4ZDz25IO917OcmbWiSPnaVdmocA5i5P5
        F/hezU0tdrsFgWPrPStO4HZsLuAjLecdBXIbdnSvVcNwr83MYwFoIKVawb5Sqn7whCYMECsSAj0WqqiU
        g7k2mFvb6Nzpcj7GeCHZGYX0vKHJLmflGE/y+H+fPKPw5WmCJg3co/F5MxurFKrNQgOK7hlvPvibZK42
        AMxCfkCTumpBIl/PHL/CGvonWx+EUo4OG9VzteVNe4wOIc8xoTT7i2AqPVHG46v+qn2bp9BINtQ3shmo
        cnITyi/d4TkAuvNLZ29QWtx+NjV0aSplJOTS1Qs3rSMs6+zqwQ5ezZsB8HMDTSoqke0YoCVAX8VXSx5B
        QsbDIEFLDUHXjiom5RA4emrXowSqzXrfgHnYlXJj5OE1M5aPeE/ggzUL6Ox8zf0Rkne0XyYFLkzkY4lr
        bOBP/BsSTW1P4YM2yxHU/FugFT46s3oTulkKoJulALpZCqCbpQC6WS6D6H/xmh+UrAZ3AAAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>